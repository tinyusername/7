#include<iostream>
#include<stdio.h>
#include<GL/glut.h>
#include<stdlib.h>
using namespace std;
#define SIN 0.86602540 
int n;
int x1 = 0, x2 = 550, y1=0, y2 = 0;
void koch(int x1, int y1, int x2, int y2, int m)
{
    int xx, yy, x[5], y[5], lx, ly, offx=50, offy = 300;
    lx = (x2-x1)/3;
    ly = (y2-y1)/3;
    x[0] =x1; 
    y[0] = y1;
    x[4] = x2; 
    y[4] = y2;
    x[1] =x[0] + lx; 
    y[1] = y[0] + ly;
    x[3] = x[0] + 2*lx; 
    y[3] = y[0] + 2*ly;
    xx = x[3] -x[1]; 
    yy = y[3]- y[1];
    x[2] = xx*(0.5) + yy*(SIN); 
    y[2] = -xx*(SIN) + yy*(0.5);
    x[2] = x[2] + x[1]; 
    y[2] = y[2] + y[1];
    if(m>0)
    {
        koch(x[0], y[0], x[1], y[1], m-1); 
        koch(x[1], y[1], x[2], y[2], m-1); 
        koch(x[2], y[2], x[3], y[3], m-1); 
        koch(x[3], y[3], x[4], y[4], m-1); 
    }
    else
    {
        glBegin(GL_LINES);
        glVertex2d(offx + x[0],650-(offy + y[0]));
        glVertex2d(offx + x[1],650-(offy + y[1]));
        glEnd();
        glBegin(GL_LINES);
        glVertex2d(offx + x[1],650-(offy + y[1]));
        glVertex2d(offx + x[2],650-(offy + y[2]));
        glEnd();
        glBegin(GL_LINES);
        glVertex2d(offx + x[2],650-(offy + y[2]));
        glVertex2d(offx + x[3],650-(offy + y[3]));
        glEnd();
        glBegin(GL_LINES);
        glVertex2d(offx + x[3],650-(offy + y[3]));
        glVertex2d(offx + x[4],660-(offy + y[4]));
        glEnd();
    }
}
void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0, 1.0, 1.0);
    koch(x1, y1, x2, y2, n);
    glFlush(); 
}
void myinit()
{
    glClearColor(0.0, 0.0, 0.0, 1.0); 
    glColor3f(1.0, 1.0, 0.0); 
    glMatrixMode(GL_PROJECTION); 
    glLoadIdentity();
    gluOrtho2D(0.0, 650.0, 0.0, 650.0);
}
int main(int argc, char **argv)
{
    cout<<"\n Enter the level of curve generation : ";
    cin>>n;
    glutInit(&argc, argv); 
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB); 
    glutInitWindowSize(650, 650); 
    glutInitWindowPosition(0,0); 
    glutCreateWindow("Koch Curve");
    glutDisplayFunc(display); 
    myinit();
    glutMainLoop();
    return 0;
}
